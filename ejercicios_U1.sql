--1 Obtener la fecha y total de la compra mas reciente de cada cliente--
SELECT CUS.CUSTUMER_ID, MAX(ORD.ORDER_DATE) LAST_ORDER, SUM(OP.QUANTITY * PROD.LIST_PRICE) ORDER_TOTAL
    FROM BRIANNA.ORDERS ORD
            INNER JOIN BRIANNA.ORDERS_PRODUCTS OP ON ORD.ORDER_ID = OP.ORDER_ID
            INNER JOIN BRIANNA.PRODUCTS PROD ON OP.PRODUCT_ID = PROD.PRODUCT_ID
            INNER JOIN BRIANNA.CUSTUMERS CUS ON ORD.CUSTUMER_ID = CUS.CUSTUMER_ID
GROUP BY CUS.CUSTUMER_ID
ORDER BY CUS.CUSTUMER_ID; 


--2 Obtener a los clientes cuyos nombre contenga la letra H o apellido inicie con Z--
SELECT CUS.FIRST_NAME, CUS.LAST_NAME FROM BRIANNA.CUSTUMERS CUS 
    WHERE CUS.FIRST_NAME LIKE 'h%' OR CUS.FIRST_NAME LIKE 'H%' 
    OR CUS.LAST_NAME LIKE 'z%' OR CUS.LAST_NAME LIKE 'Z%';


--3 Mostrar los detalles de las ordenes y calcular el costo de envio de cada orden, tomando las siguientes consideraciones:
------------10% del total cuando sea menor de 10,000
------------8% del total cuando este entre 10,000 y 30,000
------------5% del total cuando sea mayor a 30,000
SELECT ORDER_ID,
       ORDER_DATE,
       CUSTUMER_ID,
       FIRST_NAME, 
       LAST_NAME, 
       ORDER_TOTAL,
       (CASE WHEN ORDER_TOTAL<10000 THEN ORDER_TOTAL*0.1
             WHEN ORDER_TOTAL>=10000 AND ORDER_TOTAL<=30000 THEN ORDER_TOTAL*0.08
             ELSE ORDER_TOTAL*0.05 END) SHIPPING_COST
    FROM(SELECT ORD.ORDER_ID,
               ORD.ORDER_DATE,
               CUS.CUSTUMER_ID,
               CUS.FIRST_NAME, 
               CUS.LAST_NAME, 
               SUM(OP.QUANTITY * PROD.LIST_PRICE) ORDER_TOTAL
        FROM BRIANNA.ORDERS ORD
            INNER JOIN BRIANNA.ORDERS_PRODUCTS OP ON ORD.ORDER_ID = OP.ORDER_ID
            INNER JOIN BRIANNA.PRODUCTS PROD ON OP.PRODUCT_ID = PROD.PRODUCT_ID
            INNER JOIN BRIANNA.CUSTUMERS CUS ON ORD.CUSTUMER_ID = CUS.CUSTUMER_ID
        GROUP BY ORD.ORDER_ID, ORD.ORDER_DATE, CUS.CUSTUMER_ID, CUS.FIRST_NAME, CUS.LAST_NAME)
GROUP BY ORDER_ID, ORDER_DATE, CUSTUMER_ID, FIRST_NAME, LAST_NAME, ORDER_TOTAL;


--4 Obtener los products con un costo mayor a 100--
SELECT PROD.PRODUCT_ID, PROD.LIST_PRICE FROM BRIANNA.PRODUCTS PROD WHERE PROD.LIST_PRICE > 100;


--5 Promediar el costo de todos los productos y obtener el mayor costo--
--TRES COLUMNAS, EL PROMEDIO, EL MAX DE TODOS, Y EL PRODUCTO QUE CUEST MAS CON SU ID???
SELECT MAX(LIST_PRICE) MAX_PRICE, AVG(LIST_PRICE) AVERAGE FROM BRIANNA.PRODUCTS;
    

--6 Obtener los 10 productos menos vendidos y la cantidad de sus ventas en el 2015
SELECT PROD.PRODUCT_ID , OP.QUANTITY, ORD.ORDER_DATE
    FROM BRIANNA.ORDERS_PRODUCTS OP
    INNER JOIN BRIANNA.ORDERS ORD ON OP.ORDER_ID = ORD.ORDER_ID
    INNER JOIN BRIANNA.PRODUCTS PROD ON OP.PRODUCT_ID = PROD.PRODUCT_ID
WHERE ROWNUM <= 10 AND EXTRACT(YEAR FROM ORD.ORDER_DATE)=2015 ORDER BY OP.QUANTITY ASC;


--7 Obtener al cliente con mas compras en la historia 
SELECT ORD.CUSTUMER_ID, CUS.FIRST_NAME, CUS.LAST_NAME, COUNT(ORD.CUSTUMER_ID) NUM_OF_ORDERS 
    FROM BRIANNA.ORDERS ORD
            INNER JOIN BRIANNA.CUSTUMERS CUS ON ORD.CUSTUMER_ID = CUS.CUSTUMER_ID
GROUP BY ORD.CUSTUMER_ID, CUS.FIRST_NAME, CUS.LAST_NAME
HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM BRIANNA.ORDERS GROUP BY CUSTUMER_ID); 


--8 Calcular el envio de las ordenes tomando en cuenta el numero de compras del año anterior:
-------- Si tiene menos de 2 compras usar el 15%
-------- Si tiene entre 2 y 4 compras usar el 10%
-------- Si tiene mas de 5 compras usar el 5%

SELECT ORDER_ID,
       ORDER_DATE,
       CUSTUMER_ID,
       FIRST_NAME, 
       LAST_NAME, 
       ORDER_QUANTITY,
       (CASE WHEN ORDER_QUANTITY<2 THEN ORDER_TOTAL*0.15
             WHEN ORDER_QUANTITY>=2 AND ORDER_QUANTITY<=4 THEN ORDER_TOTAL*0.1
             ELSE ORDER_QUANTITY*0.05 END) SHIPPING_COST
    FROM(SELECT ORD.ORDER_ID,
               ORD.ORDER_DATE,
               CUS.CUSTUMER_ID,
               CUS.FIRST_NAME, 
               CUS.LAST_NAME, 
               COUNT(ORD.CUSTOMER_ID) ORDER_QUANTITY
        FROM BRIANNA.ORDERS ORD
            INNER JOIN BRIANNA.ORDERS_PRODUCTS OP ON ORD.ORDER_ID = OP.ORDER_ID
            INNER JOIN BRIANNA.PRODUCTS PROD ON OP.PRODUCT_ID = PROD.PRODUCT_ID
            INNER JOIN BRIANNA.CUSTUMERS CUS ON ORD.CUSTUMER_ID = CUS.CUSTUMER_ID
        GROUP BY ORD.ORDER_ID, ORD.ORDER_DATE, CUS.CUSTUMER_ID, CUS.FIRST_NAME, CUS.LAST_NAME)
GROUP BY ORDER_ID, ORDER_DATE, CUSTUMER_ID, FIRST_NAME, LAST_NAME, ORDER_QUANTITY
HAVING COUNT(*) = ((EXTRACT(YEAR FROM ORD.ORDER_DATE)=2017)); 